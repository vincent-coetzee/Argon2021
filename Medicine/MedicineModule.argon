//
//
//

export module Medicine
    {
    import Location
    import People
    import Tests("/Users/vincent/Development/Argon Projects/Testing/Test(Main)")
    
    export module Doctors
        {
        export class Doctor::(People::Person)
            {
            slot firstName::String = ""
            slot lastName::String = ""
            slot dateOfBirth::Date = @(Today)
            slot location::Location::City = ::none
            slot speciality::IllnessClassification = ::none
            }
        }
    
    export module Medications
        {
        export MedicineType::UInteger16
            {
            #none = 0
            #monoclonalAntibody = 1
            #antibiotic = 2
            #chemotherapy = 3
            }
        }
        
    export module Illnessses
        {
        export enumeration IllnessClassification::Integer
            {
            #none = 0
            #oncology = 1
            #internal = 2
            #tropical = 3
            #orthopedics = 4
            }
        }
        
    export enumeration PathogenType::Int
        {
        #none = 0
        #virus = 1
        #bacterium = 2
        #prion = 3
        #fungus = 4
        #protozoan = 5
        #worm = 6
        }
        
    export BitSet<PathogenType,Boolean> Pathogen
        
    export BitSet<Integer> BitMarker
        {
        variable(0,1)
        integerRange(variable+,4)
        floatRange(+,8)
        negativeflag(63,1)
        }
    
    export enumeration AgeGroup::Integer
        {
        #child = 1
        #teenanger = 2
        #neophyte = 3
        #adult = 4
        #mature = 5
        #elderling = 6
        }
        
    export BitSet<AgeGroup,Pathogen> PathogensByAgeGroup
        
    private method showPathogenTypes() -> Void
        {
        let set = Pathogen(value::0)
        set->virus = true
        set->protozoan = false
        format-out("The answer is ")
        let result = set->virus
        let marker = BitMarker(value::0)
        marker->variable = 1
        marker->integerRange = 11
        let bitSet = PathogensByAgeGroup(value::0)
        bitSet->neophyte = ::virus
        bitSet->teenager = ::prion
        let integerValue = bitSet->value
        let person = People::Person()
        person->name = "Joe Bloggs"
        let firstClassTemplate = People::Relationship
        }
        
    private method predicates(firstName == "Vincent",lastName == *) -> Person
        {
        local person = Person()
        
        person->name = "Vincent"
        return(person)
        }
        
    private method handleMenu(item == $MENU-FILE-OPEN)
        {
        }
        
    private method handleMenu(item == $MENU-FILE-SAVE)
        {
        }
    }

